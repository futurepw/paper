湖北中医药大学ACM程序设计小组2017年暑假第一次积分赛解题报告
1.	数0游戏
第一题，宣讲原题，不解释，上代码
#include <iostream>
using namespace std;
int fun(int n){
    int num = 0;
    while(n){
    	num += n/5;
    	n = n/5;
    } 
    return num;
}
int main(){
    int a;
    while(cin>>a){
        if(a<0)
            break;
        cout<<fun(a)<<endl;     
    } 
}
2.	小数
第二题，需要用字符串做，思路比较简单，唯一坑的是需要考虑是n超出了小数范围
#include <iostream>
#include <string.h>
using namespace std;
int main(){
    char a[120];
    int b;
    while(cin>>a>>b){
        int i;
        for(i=0;i<=strlen(a);i++)
            if(a[i]=='.')
                break;
        if(b>=strlen(a)-i){//此处对挖的坑进行处理
            cout<<0<<endl;
            continue;
        }
        cout<<a[i+b]<<endl;
    }
    return 0;
}
3.	丑数
丑数的判断：

遍历法：
1、如果一个数能够被2整除，那么让他继续除以2；
2、如果一个数能够被3整除，那么让他继续除以3；
3、如果一个数能够被5整除，那么让他继续除以5；
4、如果最后这个数变为1，那么这个数就是丑数，否则不是。
则判断方法可写出的函数为
bool uglynum(int a){  
    while(a%2==0) 
       a/=2;  
    while(a%3==0)   
       a/=3;  
    while(a%5==0)  
       a/=5;  
    if(a==1)  
       return 1;  
    else   
       return 0;  
}
这种方法速度太慢，我们则需要改进它，比如打表，把所有丑数都存入一个数组里面，然后取出来就好了，
这样速度相对而言快很多，当然我们也得改进一下方法，因为丑数只能被2 3 5整除，所以肯定是2 3 5的倍数，
如果纯粹按倍数来，也不对，比如22是2的倍数，但是可以被11整除，所以方法还是不对，换个思路，前一个丑数只能被2 3 5整除，
所以这个倍数可以用前面的倍数。
#include <iostream>  
#include <cstdio>  
#define min(a,b) ((a)<(b)?(a):(b))  
#define min3(a,b,c) min(min(a,b),c)
using namespace std;
int main(){
    int n=1;
	int a[1505];
    int p2,p3,p5;  
    p2=p3=p5=1;  
    a[1]=1;  
    while(n<1505){  
        a[++n]=min3(2*a[p2],3*a[p3],5*a[p5]);
        if(a[n]==2*a[p2]) 
			p2++;  
        if(a[n]==3*a[p3]) 
			p3++; 
        if(a[n]==5*a[p5])
			 p5++; 
    } 
    int T;
    cin>>T;
    while(T--){
        cin>>n;
        cout<<a[n]<<endl;
    }
    return 0;
}
4.	整数划分问题
首先，当a==1时，无论b是多少，只有一种就是1，而当b==1时，无论a是多少，也只有一种就是a本身，
所以就有当 a==1 or b==1 时f(a,b)=1；当然也得考虑异常值，虽然题目中提到输入值大于0，
a==0 or b==0 时f(a,b)=0 （刘汝佳书中提到过）；当a<b时，由于划分中不可能出现负数，
比如a==2 b==3最大值只能是2，因此就相当于f(a,a)，即a< b 时f(a,b)=f(a,a)；当a==b时，
根据递归思想，则有f(a,b)=f(a,b-1)+1；当a>b时，根据划分中是否包含最大值b，若不包含b，
即最大值为b-1，有f(a,b-1)，若包含b，即最大值为b，而a大于b，则可表示为b+{集合}，
集合是和为a-b，我们只需要算出集合的划分数即可，则有f(a-b,b)，将两种加起来，
就得到了我们需要的递推公式f(a,b)=f(a,b-1)+f(a-b,b)
#includee <iostream>
using namespace std;
int f(int a,int b);
int main(){
    int a,b;
    while(cin>>a>>b){
        cout<<f(a,b)<<endl; 
    } 
    return 0;
} 
int f(int a,int b){
    if((a==1)||(b==1))
        return 1;
    if((a<1)||(b<1))
        return 0;
    if(a<b)
        return f(a,a);
    if(a==b)
        return f(a,a-1)+1;
    return f(a,b-1)+f(a-b,b);       
}
5.	Acm
此题基本无坑，可能有一点难理解
#include <iostream>
using namespace std;
int main(){
    int a[6][2];
    int i,j;
    while(1){
    	for(i=0;i<6;i++)
    		for(j=0;j<2;j++)
    			cin>>a[i][j];
        int sum=0;
        for(i=0;i<6;i++){
            if(a[i][0]==0||a[i][1]==0)
                continue;
            if(a[i][0]>1)
                sum+=20*(a[i][0]-1);
            sum+=a[i][1];
        }
        cout<<sum<<endl;
    }
    return 0;
}
6.	阿狸的网店
首先想到的是6*6必须一个箱子，即a6个，然后a5，a4，a3都用可以这样处理，a5时，需要11个1*1的商品，
a4的时候需要5个2*2的商品或者11+9个1*1的商品，当然也可以混着用，而a3的时候则要考虑有几个a3商品，
4个则需要0个a2，3个则需要1个a2，2个则需要3个a2，1个则需要5个a2。然后我们先要s=a6 +a5+ a4 +(a3+3)/4个箱子
，再减掉a4*5个a2，处理剩下的a2是否需要箱子，需要则在s中加上，然后再算出s个箱子可以放的a1数量，然后再处理未放入的a1需要的箱子
#include <iostream>
using namespace std;
int main(int argc, char *argv[]){
    int a1,a2,a3,a4,a5,a6;
    int n1,n2;
    int b[4]={0,5,3,1};
    while(cin>>a1>>a2>>a3>>a4>>a5>>a6){
        if(!(a1||a2||a3||a4||a5||a6))
            break;
        int sum = a6 + a5 + a4 + (a3+3)/4;
        int x4 = a4*5,x3 = a3%4;
        n2 = x4 + b[x3];
        if(a2>n2)
            sum += (a2-n2+8)/9;
        n1 = 36*(sum -a6) - 25*a5 - 16*a4 - 9*a3 - 4*a2;
        if(a1>n1)
            sum += (a1-n1+35)/36;
        cout<<sum<<endl;        
    } 
}
